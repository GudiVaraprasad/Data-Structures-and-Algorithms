/* Given an array A having N elements, the task is to find the next greater element for each element of the 
array in order of their appearance in the array. If no such element exists, output -1. 
This should be achieved with a time complexity of O(n). */

import java.io.*;
import java.util.*; 
class NextLargerElement { 
static void nextLargerElement(long arr[], int n) 
{ 
	Stack<Long> s = new Stack<Long>(); 

	long arr1[] = new long[n]; 
	for (int i = n - 1; i >= 0; i--) 
	{ 
		while (!s.isEmpty() && s.peek() <= arr[i]) 
			s.pop(); 
			
		if (s.empty()) 
			arr1[i] = -1;		 
		else
			arr1[i] = s.peek();		 

		s.push(arr[i]); 
	} 

	for (int i = 0; i < n; i++) 
		System.out.print(arr1[i]+" "); 
} 

public static void main(String[] args) 
{ 
	Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		long ar[] = new long[n];
		for (int i = 0; i < n; i++)
		{
			ar[i] = sc.nextLong();
		}  
		nextLargerElement(ar, n); 
} 
}
